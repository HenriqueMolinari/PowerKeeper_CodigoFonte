import 'Sensor.dart';

class SensorSCT013 extends Sensor {
  final double _fatorCalibracao;
  final double _tensaoReferencia;

  SensorSCT013(
    int id,
    String tipo,
    String unidadeMedida,
    this._fatorCalibracao,
    this._tensaoReferencia,
  ) : super(id, tipo, unidadeMedida);

  double get fatorCalibracao => _fatorCalibracao;
  double get tensaoReferencia => _tensaoReferencia;

  @override
  double coletarDado() {
    // SimulaÃ§Ã£o de coleta de dados do sensor SCT-013
    // Em um sistema real, isso se conectaria ao hardware
    double leituraBruta = _simularLeitura();
    return _calcularCorrente(leituraBruta);
  }

  double _simularLeitura() {
    // Simula uma leitura de tensÃ£o entre 0V e 5V
    return (DateTime.now().millisecond % 500) / 100.0;
  }

  double _calcularCorrente(double tensaoLida) {
    // FÃ³rmula simplificada para cÃ¡lculo de corrente baseada na tensÃ£o
    // SCT-013 typically outputs voltage proportional to current
    return (tensaoLida - _tensaoReferencia) * _fatorCalibracao;
  }

  double calcularPotencia(double corrente, double tensao) {
    return corrente * tensao;
  }

  double calcularConsumo(double potencia, double tempoHoras) {
    return potencia * tempoHoras / 1000; // kWh
  }

  double calcularCusto(double consumoKwh, double tarifa) {
    return consumoKwh * tarifa;
  }

  @override
  void exibirDados() {
    print('ðŸ”Œ SENSOR SCT-013 - MEDIÃ‡ÃƒO DE CORRENTE');
    print('â”€' * 40);
    print('ID: $id');
    print('Tipo: $tipo');
    print('Unidade de Medida: $unidadeMedida');
    print('Fator de CalibraÃ§Ã£o: $_fatorCalibracao');
    print('TensÃ£o de ReferÃªncia: ${_tensaoReferencia}V');
    print('â”€' * 40);
  }

  void realizarMedicaoCompleta(double tensaoRede, double tarifaKwh) {
    double corrente = coletarDado();
    double potencia = calcularPotencia(corrente, tensaoRede);
    double consumoHora = calcularConsumo(potencia, 1.0);
    double custoHora = calcularCusto(consumoHora, tarifaKwh);

    print('ðŸ“Š MEDIÃ‡ÃƒO COMPLETA - SENSOR SCT-013');
    print('â”€' * 40);
    print('ðŸ’¡ Corrente: ${corrente.toStringAsFixed(2)} A');
    print('âš¡ TensÃ£o: ${tensaoRede.toStringAsFixed(1)} V');
    print('ðŸ”‹ PotÃªncia: ${potencia.toStringAsFixed(2)} W');
    print('ðŸ“ˆ Consumo/hora: ${consumoHora.toStringAsFixed(4)} kWh');
    print('ðŸ’° Custo/hora: R\$ ${custoHora.toStringAsFixed(4)}');
    print('â”€' * 40);
  }
}
